{
    static int ans;
    public static void print(int[] arr) {
        for (int ele : arr) {
            System.out.print(ele + " ");
        }
        System.out.println();
    }

    public static void sweap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public static int partion(int[] arr, int lo, int hi){
        int pivot = arr[lo];
        int smallerCount = 0;
        for (int i = lo + 1; i <= hi; i++) {
            if(i== lo) continue;
            if (arr[i] <=pivot) {
                smallerCount++;
            }}
        int corectIdx = lo + smallerCount;
        sweap(arr,lo, corectIdx);
        //  System.out.println(Arrays.toString(arr));
        // partition
        int j = lo , k = hi;
        while (j < corectIdx && k > corectIdx) {
            if (arr[j] <= pivot) j++;
            else if (arr[k] > pivot) k--;
            else if (arr[j] > pivot && arr[k] <= pivot) {
                sweap(arr, j, k);
            }

        }
        return corectIdx;
    }





    public static void quickSelect(int[] arr, int lo, int hi,int k) {
        // find pivoit ko shi jagh lana hai
        if(lo>hi) return;
        if(lo==k-1){
            ans =arr[lo];
            return;
        }
        int idx =partion(arr, lo, hi);
        if(idx==k-1) {ans =arr[idx];
            return ;}
           if(k-1<idx) {quickSelect(arr, lo, idx - 1,k);}
      else{  quickSelect(arr, idx+1, hi,  k);}

    }

    public static void main(String[] args) {
        int [] arr =  {4,9,1,2,6,5,8};
        int n = arr.length;
        print(arr);
        int k =5 ;

        ans =0; // re initialize
        quickSelect(arr,0,n-1,k);
        System.out.println(ans);


    }

}
